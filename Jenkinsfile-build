pipeline {
    agent any

    environment {
        DOCKER_IMAGE_NAME = "notetakingapp"
        DOCKER_IMAGE_TAG = "latest"
    }

    stages {
        stage('Checkout') {
            steps {
                // Clone the repository
                git branch: 'main', url: 'https://github.com/randycl/notetakingapp.git'
            }
        }

        stage('Build') {
            agent {
                docker {
                    image 'maven:3.8.4-openjdk-17'
                    args '-v /root/.m2:/root/.m2'
                }
            }
            steps {
                // Change to the directory containing the pom.xml and run Maven to build the project
                dir('note-taking-app/note-taking-app') {
                    sh 'mvn clean package'
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                // Build the Docker image from the correct context
                sh """
                docker build -t ${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG} -f note-taking-app/note-taking-app/Dockerfile note-taking-app/note-taking-app
                """
            }
        }

        stage('Run Docker Container') {
            steps {
                // Run the Docker container
                sh """
                docker run -d --name ${DOCKER_IMAGE_NAME} ${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG}
                """
            }
        }
    }

    post {
        always {
            // Clean up Docker container
            sh """
            docker stop ${DOCKER_IMAGE_NAME} || true
            docker rm ${DOCKER_IMAGE_NAME} || true
            """
        }
        success {
            echo 'Build and Docker packaging successful!'
        }
        failure {
            echo 'Build or Docker packaging failed.'
        }
    }
}
